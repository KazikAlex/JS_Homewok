ЦИКЛЫ
  - Что такое циклы и итерация

  Циклы while и do-while:
    - A.40
    - Сравнение циклов - см. скрин

  Цикл for:
    - Видимость переменной, пропуск частей цикла, break/continue, метки -
      http://web.archive.org/web/20190420104623/http://learn.javascript.ru/while-for
  Общее во всех циклах:
    - Их условия и шаги можно оформлять по-разному

ОБЪЕКТЫ
  - A.67
  - Объект это ассоциативный массив
  - Ключи иначе называют свойствами объекта
  - Ключи в объекте не должны дублироваться
  - Особенности синтаксиса при работе с ключами объекта - см. скрин
  - У объектов нет свойства length, оно будет равно undefined
  - Приведение к boolean
  - Слайды A.70a-b - Массивы и объекты могут иметь сложный тип
  - Получение данных из сложной конструкции, экранирование кавычек - см. скрин
  - Практическое применение
  - Цикл for...in - работает также и для массивов

ССЫЛКИ
  - В JavaScript нет прямого способа сравнивать и копировать массивы и объекты
  - См. скрин
  - Сравнение сложных типов данных - см. скрин

ФУНКЦИИ
  О функциях:
    - http://web.archive.org/web/20190405104507/http://learn.javascript.ru/function-basics
    - Функция может работать с большим количеством параметров
    - Сама по себе функция возвращает undefined
    - Функции можно копировать через =

ДОМАШНЕЕ ЗАДАНИЕ
  Задание 1:
    При помощи цикла for вывести чётные числа от 2 до 10. Придумать несколько решений.

  Задание 2:
    Создать функцию isEmpty(obj), которая возвращает true, если в объекте нет свойств и false – если хоть одно
    свойство есть.

  Задание 3:
    Написать код, который:
    запрашивает по очереди значения при помощи prompt и сохраняет их в массиве,
    заканчивает ввод, как только посетитель введёт пустую строку, не число или нажмёт "Отмена"
    (при этом ноль 0 не должен заканчивать ввод, это разрешённое число), выводит сумму всех значений массива (подсчет
    осуществлять именно из уже сформированного массива)

  Задание 4 *:
    Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
    Другими словами, n>1 – простое, если при делении на любое число от 2 до n-1 есть остаток.
    Создайте код, который выводит все простые числа из интервала от 2 до 10. Результат должен быть: 2,3,5,7.
    Код также должен легко модифицироваться для любых других интервалов.